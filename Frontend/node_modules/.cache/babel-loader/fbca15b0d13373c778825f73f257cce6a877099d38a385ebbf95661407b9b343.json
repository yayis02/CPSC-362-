{"ast":null,"code":"var _jsxFileName = \"/Users/pelack/Desktop/Resources/Frontend/src/components/ShelterMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Leaflet requires fixing marker icons separately\nimport L from \"leaflet\";\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\";\nimport markerShadowPng from \"leaflet/dist/images/marker-shadow.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShelterMap = () => {\n  _s();\n  const [shelters, setShelters] = useState([]);\n  useEffect(() => {\n    const fetchShelters = async () => {\n      try {\n        let response = await fetch('http://localhost:5000/api/shelters');\n        let data = await response.json();\n        setShelters(data);\n      } catch (error) {\n        console.error(\"Error fetching shelter data:\", error);\n      }\n    };\n\n    /*const fetchShelters = async () => {\n        try {\n            let response = await fetch(\n                'https://overpass-api.de/api/interpreter?data=[out:json];node[\"amenity\"=\"shelter\"](37.0,-120.0,39.0,-118.0);out body;'\n            );\n            let data = await response.json();\n            setShelters(data.elements);\n        } catch (error) {\n            console.error(\"Error fetching shelter data:\", error);\n        }\n    };*/\n\n    fetchShelters();\n  }, []);\n  const customIcon = new L.Icon({\n    iconUrl: markerIconPng,\n    shadowUrl: markerShadowPng,\n    iconSize: [25, 41],\n    iconAnchor: [12, 41]\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [37.5, -119.5],\n    zoom: 6,\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), shelters.map(shelter => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [shelter.lat, shelter.lon],\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: shelter.tags.name || \"Unnamed Shelter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, shelter.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ShelterMap, \"PI1PqwNxJJlz8RVFeTHZlnvSASo=\");\n_c = ShelterMap;\nexport default ShelterMap;\nvar _c;\n$RefreshReg$(_c, \"ShelterMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","markerIconPng","markerShadowPng","jsxDEV","_jsxDEV","ShelterMap","_s","shelters","setShelters","fetchShelters","response","fetch","data","json","error","console","customIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","center","zoom","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","map","shelter","position","lat","lon","icon","tags","name","id","_c","$RefreshReg$"],"sources":["/Users/pelack/Desktop/Resources/Frontend/src/components/ShelterMap.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Leaflet requires fixing marker icons separately\nimport L from \"leaflet\";\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\";\nimport markerShadowPng from \"leaflet/dist/images/marker-shadow.png\";\n\nconst ShelterMap = () => {\n    const [shelters, setShelters] = useState([]);\n\n    useEffect(() => {\n        const fetchShelters = async () => {\n            try {\n              let response = await fetch('http://localhost:5000/api/shelters');\n              let data = await response.json();\n              setShelters(data);\n            } catch (error) {\n              console.error(\"Error fetching shelter data:\", error);\n            }\n          };\n          \n        /*const fetchShelters = async () => {\n            try {\n                let response = await fetch(\n                    'https://overpass-api.de/api/interpreter?data=[out:json];node[\"amenity\"=\"shelter\"](37.0,-120.0,39.0,-118.0);out body;'\n                );\n                let data = await response.json();\n                setShelters(data.elements);\n            } catch (error) {\n                console.error(\"Error fetching shelter data:\", error);\n            }\n        };*/\n\n        fetchShelters();\n    }, []);\n\n    const customIcon = new L.Icon({\n        iconUrl: markerIconPng,\n        shadowUrl: markerShadowPng,\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n    });\n\n    return (\n        <MapContainer \n        center={[37.5, -119.5]} \n        zoom={6} \n        style={{ height: \"500px\", width: \"100%\" }}>\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n            {shelters.map((shelter) => (\n                <Marker\n                    key={shelter.id}\n                    position={[shelter.lat, shelter.lon]}\n                    icon={customIcon}\n                >\n                    <Popup>\n                        <strong>{shelter.tags.name || \"Unnamed Shelter\"}</strong>\n                    </Popup>\n                </Marker>\n            ))}\n        </MapContainer>\n    );\n};\n\nexport default ShelterMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;;AAEjC;AACA,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,OAAOC,eAAe,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAChE,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAChCL,WAAW,CAACI,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;;IAEH;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEQL,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,UAAU,GAAG,IAAIhB,CAAC,CAACiB,IAAI,CAAC;IAC1BC,OAAO,EAAEjB,aAAa;IACtBkB,SAAS,EAAEjB,eAAe;IAC1BkB,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;EACvB,CAAC,CAAC;EAEF,oBACIjB,OAAA,CAACR,YAAY;IACb0B,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAE;IACvBC,IAAI,EAAE,CAAE;IACRC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACtCvB,OAAA,CAACP,SAAS;MAAC+B,GAAG,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrEzB,QAAQ,CAAC0B,GAAG,CAAEC,OAAO,iBAClB9B,OAAA,CAACN,MAAM;MAEHqC,QAAQ,EAAE,CAACD,OAAO,CAACE,GAAG,EAAEF,OAAO,CAACG,GAAG,CAAE;MACrCC,IAAI,EAAEtB,UAAW;MAAAW,QAAA,eAEjBvB,OAAA,CAACL,KAAK;QAAA4B,QAAA,eACFvB,OAAA;UAAAuB,QAAA,EAASO,OAAO,CAACK,IAAI,CAACC,IAAI,IAAI;QAAiB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC,GANHE,OAAO,CAACO,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOX,CACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEvB,CAAC;AAAC1B,EAAA,CAvDID,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAyDhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}